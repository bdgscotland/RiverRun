<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1000</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Initialize everything and global variables





alarm[0] = 90;
alarm[1] = 15; // score increment
alarm[2] = 90;
alarm[3] = 240;
alarm[4] = 240; // purple speed fish
alarm[5] = 30; // draw tree
alarm[6] = 90; // pink fish
alarm[7] = 30; // create shark
alarm[9] = 30;
alarm[10] = 200;

globalvar FYC;
globalvar FYCplayer;
globalvar velocityShip;
globalvar velocityOffset;
globalvar damageRock;
globalvar fishFast;

fishFast = false;

damageRock = -1;

FYC = 1;
FYCplayer = 0;
velocityShip = 4;
velocityOffset = 0;

globalvar spriteTreeSelect; // set in alarm 1
spriteTreeSelect = "spr_T1";

globalvar offsetLevelRock; // When score hits '000, reduce time to rock spawn
offsetLevelRock = 0;
scoreFactor = 0;
scoreFactor_prev = 0;
FishCaughtPercentage = 0;

score = 0;
levelupflag = 0;

// Pop up info
textdraw = 0;
textmessage = "";
textscale = 1;
textcolor = c_yellow;

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Set up music list
audio_stop_music()

playlist[1] = mus_Polka1;
playlist[2] = mus_Polka2;
playlist[3] = mus_Polka3;

last_played = -1;

if(last_played == -1) { //No track has been played ago
n = ceil(random(3)) //Replace 3 with the number of tracks
last_played = n;
audio_play_music(playlist[n],false);
} else
if(!audio_is_playing(playlist[last_played])) {
n = ceil(random(3)) //Replace 3...
if(last_played != n) {
last_played = n;
audio_play_music(playlist[n],false);
}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Create blue fish
FYC += 1;

//instance_create(max(108,random(room_width)),random(room_height/4)-sprite_height,obj_Fish_Blue);
instance_create(max(108,random(room_width)),random(room_height)/6,obj_Fish_Blue);

alarm[0] = 34+random(239);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="9">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Wipe pop up text
textdraw := 0;
textscale = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="8">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Level up particles
scr_Explode(obj_LevelPortal.x+(obj_LevelPortal.sprite_width/2),40);
levelupflag = 1;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Create shark
if (obj_Boat.score &gt; 1000) {
    instance_create(0,-100,obj_Shark_Fin);  
}


alarm[7] = max(800,random(2400));
//alarm[7] = 120;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="6">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// create pink fish
instance_create(max(108,random(room_width)),random(room_height/3)-sprite_height,obj_Fish_Pink);


FYC += 1;
alarm[6] = 30+random(200);


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Generate Trees - 30 steps
alarm[5] = 30;

instance_create(random(40),(random(550)*-1),obj_Tree);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// create purple speed fish and gold coin
instance_create(max(108,random(room_width)),random(room_height/6)-sprite_height,obj_Fish_Fast);
instance_create(max(108,random(room_width)),random(room_height/5)-sprite_height,obj_GoldCoin);

//FYC += 1;

alarm[4] = max(800,random(2400));

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Generate fish star
instance_create(max(104,random(room_width)),0-sprite_height,obj_Fish_Star);
alarm[3] = max(800,random(2400));
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// create rock
instance_create(max(108,random(room_width)),0-sprite_height,choose(obj_Rock1,obj_Wood1));
alarm[2] = max(30,random(240)-offsetLevelRock);


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Incremental steps - 15 steps
alarm[1] = 15;
obj_Boat.score += 1;



//instance_create(max(108,random(room_width-sprite_width)),random(room_height/2)-sprite_height,obj_Fish_Yellow);
//random(350)*-1
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// create yellow fish
instance_create(max(108,random(room_width)),random(room_height/5)-sprite_height,obj_Fish_Yellow);


FYC += 1;
alarm[0] = 30+random(200);


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Incremental steps
with obj_Boat
{

    if !place_meeting(x,y,obj_Rock1) and (fishFast = false) { 
            velocityShip = 4;

    }

    if !place_meeting(x,y,obj_Rock1) and (fishFast = true) {
            velocityShip = 6;  
    }

}

// 1000 increment check - Level increase
scoreFactor_prev = scoreFactor;
scoreFactor = round(obj_Boat.score / 1000);
if (scoreFactor &gt; scoreFactor_prev) then levelupflag = 0;

if (levelupflag == 0) {
    scr_Explode(obj_LevelPortal.x+(obj_LevelPortal.sprite_width/2),40); 
    levelupflag = 1;   
}



switch (scoreFactor) 
{
    case 1:
        // Level 2
        offsetLevelRock = 20;   
        break;
    case 2:
        // Level 3
        offsetLevelRock = 40;
        break;
    case 3:
        // Level 4
        offsetLevelRock = 60;
        break;
    case 4:
        // Level 5
        offsetLevelRock = 80;
        velocityOffset = 1;
        break;
    case 5:
        // Level 6
        offsetLevelRock = 120;
        velocityOffset = 1;
        break;
    case 6:
        // Level 7
        offsetLevelRock = 140;
        velocityOffset = 1;
        break;
    case 7:
        // Level 8
        offsetLevelRock = 160;
        velocityOffset = 1;
        break;
    case 8:
        // Level 9
        offsetLevelRock = 180;
        velocityOffset = 1;
        break;
    case 9:
        // Level 10
        offsetLevelRock = 200;
        velocityOffset = 2;
        break;
    case 10:
        // Level 11
        damageRock = -2;
        velocityOffset = 2;
        break;
    case 15:
        // Level 16
        damageRock = -2;
        velocityOffset = 2;
        break;
    case 16:
        // Level 17
        damageRock = -2;
        velocityOffset = 3;
        break;
    case 17:
        // Level 18
        damageRock = -2;
        velocityOffset = 3;
        break;
    case 20:
        // Level 21
        damageRock = -2;
        velocityOffset = 4;
        break;
    case 25:
        // Level 26
        damageRock = -3;
        velocityOffset = 5;
        break;
    case 29:
        // Level 30
        damageRock = -4;
        velocityOffset = 6;
        break;
        
    default:
        // Default
        break;
}  

background_vspeed[0] = velocityShip + velocityOffset;
FishCaughtPercentage = (FYCplayer / FYC) * 100;

// Save Scores
if obj_Boat.health &lt;= 0 then 
{
    
    ini_open("savegame.ini");
    if obj_Boat.score &gt; ini_read_real("scores","highscore", 0) then ini_write_real("scores","highscore", obj_Boat.score);
    if scoreFactor &gt; ini_read_real("level","highscore", 0) then ini_write_real("level","highscore", scoreFactor+1);
    if FishCaughtPercentage &gt; ini_read_real("catch","highscore", 0) then ini_write_real("catch","highscore", FishCaughtPercentage);
    with obj_Boat { instance_destroy(); }
    ini_close();
    game_restart();
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="53">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//instance_create(mouse_x,mouse_y,obj_Line);


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw info items 
draw_healthbar(room_width-116,6,room_width-16,16,obj_Boat.health,c_black,c_red,c_green,1,1,1);

//draw_set_font(your_font)
draw_set_color(c_black); //example c_white c_red c_blue c_black
draw_text(0+16,5,"Score:"+string(obj_Boat.score))
draw_set_color(c_white); 
draw_text(1+17,6,"Score:"+string(obj_Boat.score))

// draw catch of the day
draw_set_color(c_black); //example c_white c_red c_blue c_black
draw_text(0+16,23,"Catch of the day:");
draw_set_color(c_yellow); 
draw_text(1+17,24,"Catch of the day:");

// draw catch of the day
draw_set_color(c_black); //example c_white c_red c_blue c_black
draw_text(0+16,35,string(FishCaughtPercentage)+"%");
draw_set_color(c_yellow); 
draw_text(1+17,36,string(FishCaughtPercentage)+"%");

//draw_text(100,350,scoreFactor);
//draw_text(100,370,scoreFactor_prev);

//scoreFactor = scoreFactor + 1;
scoreSize = string_length(string(scoreFactor+1));
// draw score
draw_text(obj_LevelPortal.x+(obj_LevelPortal.sprite_width/2)-(scoreSize*6),40,round(scoreFactor+1));





//draw_text(100,410,(round(obj_Boat.score / 1000)));


</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw Collide Scores
if( textdraw == 0) { textscale = 1; exit; }
if( textdraw == 1) { 
textscale += 0.1;
draw_set_halign(fa_center);
draw_set_color(c_black); //example c_white c_red c_blue c_black
draw_text_ext_transformed(obj_Boat.x,(obj_Boat.y-(obj_Boat.sprite_height))-textscale,string(textmessage),10,300,textscale,textscale,image_angle);
draw_set_color(textcolor); //example c_white c_red c_blue c_black
draw_text_ext_transformed(obj_Boat.x-1,((obj_Boat.y-(obj_Boat.sprite_height))-1)-textscale,string(textmessage),10,300,textscale,textscale,image_angle);


draw_set_halign(fa_left);



}



</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
